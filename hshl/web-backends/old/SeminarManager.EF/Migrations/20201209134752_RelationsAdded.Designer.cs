// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SeminarManager.EF;

namespace SeminarManager.EF.Migrations
{
    [DbContext(typeof(SeminarManagerContext))]
    [Migration("20201209134752_RelationsAdded")]
    partial class RelationsAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SeminarManager.Model.Attendee", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("integer");

                    b.Property<int>("SeminarID")
                        .HasColumnType("integer");

                    b.HasIndex("PersonID");

                    b.HasIndex("SeminarID");

                    b.ToTable("Attendees");
                });

            modelBuilder.Entity("SeminarManager.Model.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SeminarManager.Model.Seminar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("PersonID")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PersonID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Seminars");
                });

            modelBuilder.Entity("SeminarManager.Model.Attendee", b =>
                {
                    b.HasOne("SeminarManager.Model.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarManager.Model.Seminar", null)
                        .WithMany()
                        .HasForeignKey("SeminarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SeminarManager.Model.Seminar", b =>
                {
                    b.HasOne("SeminarManager.Model.Person", null)
                        .WithMany("Teaching")
                        .HasForeignKey("PersonID");

                    b.HasOne("SeminarManager.Model.Person", null)
                        .WithMany()
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SeminarManager.Model.Person", b =>
                {
                    b.Navigation("Teaching");
                });
#pragma warning restore 612, 618
        }
    }
}
